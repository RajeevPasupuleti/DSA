package com.dsa.sort;

import java.util.Arrays;

public class RadixSort {

	public static void main(String[] args) {
		int[] intArray = {4725,4586,1330,8792,1594,5729};
		System.out.println("----------------------This is Radix Sort------------------");
		//radixSort(intArray, 10, 4);
		//System.out.println(Arrays.toString(intArray));


		String[] array = {"bcdef","dbaqc","abcde","omadd","bbbbb"};
		String[] array1 = {"bbbbc","bcccc","bbccc","bbbcc","bzbbb"};
		radixSort(array1, 26, 5);
		//System.out.println(Arrays.toString(array));

	}

	public static void radixSort(int[] input, int radix, int width) {
		for(int i =0; i < width;i++) {
			radixSingleSort(input, i , radix);
		}
	}

	public static void radixSingleSort(int[] input, int position, int radix) {

		int numItems = input.length;
		int[] countArray = new int[radix];
		for(int value:input) {
			countArray[getDigit(position,value,radix)]++;
		}
		//Adjust the count array for stable sort
		for(int i = 1; i < radix; i++) {
			countArray[i] += countArray[i-1];
		}
		int[] temp = new int[numItems];
		for (int tempIndex = numItems-1; tempIndex >=0 ; tempIndex--) {
			temp[--countArray[getDigit(position, input[tempIndex], radix)]] = input[tempIndex];
		}
		for(int tempIndex = 0; tempIndex < numItems; tempIndex++) {
			input[tempIndex] = temp[tempIndex];
		}
	}

	public static int getDigit(int position, int value, int radix) {

		return value/(int) Math.pow(radix, position) % radix;
	}


	public static void radixSort(String[] input, int radix, int width) {
		for(int i =0; i < width;i++) {
			radixSingleSort(input, i , radix);
		}
	}

	public static void radixSingleSort(String[] input, int position, int radix) {

		int numItems = input.length;
		int[] countArray = new int[radix];
		for(String value:input) {
			countArray[getDigit(position,value,radix)]++;
		}
		//Adjust the count array for stable sort
		for(int i = 1; i < radix; i++) {
			countArray[i] += countArray[i-1];
		}
		System.out.println("For Position "+position+" Counting Array is-----");
		System.out.println(Arrays.toString(countArray));
		String[] temp = new String[numItems];
		for (int tempIndex = numItems-1; tempIndex >=0 ; tempIndex--) {
			temp[--countArray[getDigit(position, input[tempIndex], radix)]] = input[tempIndex];
		}
		for(int tempIndex = 0; tempIndex < numItems; tempIndex++) {
			input[tempIndex] = temp[tempIndex];
		}
		System.out.println("For Position "+position+" Array is-----");
		System.out.println(Arrays.toString(input));
	}

	public static int getDigit(int position, String value, int radix) {

		return (int) (value.charAt(value.length()-position-1)) - 97;
	}

}

